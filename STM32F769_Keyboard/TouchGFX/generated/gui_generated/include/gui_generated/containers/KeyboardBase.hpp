/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KEYBOARDBASE_HPP
#define KEYBOARDBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>

class KeyboardBase : public touchgfx::Container
{
public:
    KeyboardBase();
    virtual ~KeyboardBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void escBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void clrBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cn_enBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void numBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void qBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void wBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void eBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void rBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void tBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void yBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void uBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void iBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void aBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void sBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void dBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void gBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void hBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void jBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void kBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void zBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void xBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void vBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void bBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void mBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void oBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void dxBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void pBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void lBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void blBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void en_entBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void en_delBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb1BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb2BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb3BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb4BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb5BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb6BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb7BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb8BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb9BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void nb0BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh1BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh2BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh3BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh4BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh5BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh6BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh7BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh8BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh9BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh10BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh11BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fh12BtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fhDelBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void fhEntBtClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtLiftClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtRightClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtNoneClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtABCClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtDEFClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtGHIClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtJKLClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtMNOClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtPQRSClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtTUVClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtWXYZClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void pySelectBt1Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void pySelectBt2Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void pySelectBt3Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void pySelectBt4Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void pySelectBt5Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnSelectBt1Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnSelectBt2Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnSelectBt3Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnSelectBt4Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnSelectBt5Click()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtBackClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtEntClick()
    {
        // Override and implement this function in Keyboard
    }

    virtual void cnBtDelClick()
    {
        // Override and implement this function in Keyboard
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image keyboardBackground;
    touchgfx::TextAreaWithOneWildcard textInput;
    touchgfx::Container funcBtCont;
    touchgfx::ButtonWithLabel escBt;
    touchgfx::ButtonWithLabel clrBt;
    touchgfx::ButtonWithLabel cn_enBt;
    touchgfx::ButtonWithLabel numBt;
    touchgfx::Container enCont;
    touchgfx::ButtonWithLabel qBt;
    touchgfx::ButtonWithLabel wBt;
    touchgfx::ButtonWithLabel eBt;
    touchgfx::ButtonWithLabel rBt;
    touchgfx::ButtonWithLabel tBt;
    touchgfx::ButtonWithLabel yBt;
    touchgfx::ButtonWithLabel uBt;
    touchgfx::ButtonWithLabel iBt;
    touchgfx::ButtonWithLabel aBt;
    touchgfx::ButtonWithLabel sBt;
    touchgfx::ButtonWithLabel dBt;
    touchgfx::ButtonWithLabel fBt;
    touchgfx::ButtonWithLabel gBt;
    touchgfx::ButtonWithLabel hBt;
    touchgfx::ButtonWithLabel jBt;
    touchgfx::ButtonWithLabel kBt;
    touchgfx::ButtonWithLabel zBt;
    touchgfx::ButtonWithLabel xBt;
    touchgfx::ButtonWithLabel cBt;
    touchgfx::ButtonWithLabel vBt;
    touchgfx::ButtonWithLabel bBt;
    touchgfx::ButtonWithLabel nBt;
    touchgfx::ButtonWithLabel mBt;
    touchgfx::ButtonWithLabel oBt;
    touchgfx::ButtonWithLabel dxBt;
    touchgfx::ButtonWithLabel pBt;
    touchgfx::ButtonWithLabel lBt;
    touchgfx::ButtonWithLabel blBt;
    touchgfx::ButtonWithLabel en_entBt;
    touchgfx::ButtonWithLabel en_delete;
    touchgfx::Container cnCont;
    touchgfx::Image pinyin_image;
    touchgfx::Button cnBtLift;
    touchgfx::Button cnBtRight;
    touchgfx::ButtonWithLabel pyBtNone;
    touchgfx::ButtonWithLabel pyBtABC;
    touchgfx::ButtonWithLabel pyBtDEF;
    touchgfx::ButtonWithLabel pyBtGHI;
    touchgfx::ButtonWithLabel pyBtJKL;
    touchgfx::ButtonWithLabel pyBtMNO;
    touchgfx::ButtonWithLabel pyBtPQRS;
    touchgfx::ButtonWithLabel pyBtTUV;
    touchgfx::ButtonWithLabel pyBtWXYZ;
    touchgfx::ButtonWithLabel cnBtBack;
    touchgfx::ButtonWithLabel cnBtEnt;
    touchgfx::ButtonWithLabel cnBtDel;
    touchgfx::Container pySeclecCont;
    touchgfx::Button pySelectBt1;
    touchgfx::Button pySelectBt2;
    touchgfx::Button pySelectBt3;
    touchgfx::Button pySelectBt4;
    touchgfx::Button pySelectBt5;
    touchgfx::TextAreaWithOneWildcard pyText1;
    touchgfx::TextAreaWithOneWildcard pyText2;
    touchgfx::TextAreaWithOneWildcard pyText3;
    touchgfx::TextAreaWithOneWildcard pyText4;
    touchgfx::TextAreaWithOneWildcard pyText5;
    touchgfx::Container cnSelectCont;
    touchgfx::Button cnSelectBt1;
    touchgfx::Button cnSelectBt2;
    touchgfx::Button cnSelectBt3;
    touchgfx::Button cnSelectBt4;
    touchgfx::Button cnSelectBt5;
    touchgfx::TextAreaWithOneWildcard cnText1;
    touchgfx::TextAreaWithOneWildcard cnText2;
    touchgfx::TextAreaWithOneWildcard cnText3;
    touchgfx::TextAreaWithOneWildcard cnText4;
    touchgfx::TextAreaWithOneWildcard cnText5;
    touchgfx::Container nbCont;
    touchgfx::ButtonWithLabel nb1Bt;
    touchgfx::ButtonWithLabel nb2Bt;
    touchgfx::ButtonWithLabel nb3Bt;
    touchgfx::ButtonWithLabel nb4Bt;
    touchgfx::ButtonWithLabel nb5Bt;
    touchgfx::ButtonWithLabel nb6Bt;
    touchgfx::ButtonWithLabel nb7Bt;
    touchgfx::ButtonWithLabel nb8Bt;
    touchgfx::ButtonWithLabel nb9Bt;
    touchgfx::ButtonWithLabel nb0Bt;
    touchgfx::ButtonWithLabel fhBt1;
    touchgfx::ButtonWithLabel fhBt2;
    touchgfx::ButtonWithLabel fhBt3;
    touchgfx::ButtonWithLabel fhBt4;
    touchgfx::ButtonWithLabel fhBt5;
    touchgfx::ButtonWithLabel fhBt6;
    touchgfx::ButtonWithLabel fhBt7;
    touchgfx::ButtonWithLabel fhBt8;
    touchgfx::ButtonWithLabel fhBt9;
    touchgfx::ButtonWithLabel fhBt10;
    touchgfx::ButtonWithLabel fhBt11;
    touchgfx::ButtonWithLabel fhBt12;
    touchgfx::ButtonWithLabel fhBtDele;
    touchgfx::ButtonWithLabel fhBtDEnt;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTINPUT_SIZE = 100;
    touchgfx::Unicode::UnicodeChar textInputBuffer[TEXTINPUT_SIZE];
    static const uint16_t PYTEXT1_SIZE = 6;
    touchgfx::Unicode::UnicodeChar pyText1Buffer[PYTEXT1_SIZE];
    static const uint16_t PYTEXT2_SIZE = 6;
    touchgfx::Unicode::UnicodeChar pyText2Buffer[PYTEXT2_SIZE];
    static const uint16_t PYTEXT3_SIZE = 6;
    touchgfx::Unicode::UnicodeChar pyText3Buffer[PYTEXT3_SIZE];
    static const uint16_t PYTEXT4_SIZE = 6;
    touchgfx::Unicode::UnicodeChar pyText4Buffer[PYTEXT4_SIZE];
    static const uint16_t PYTEXT5_SIZE = 6;
    touchgfx::Unicode::UnicodeChar pyText5Buffer[PYTEXT5_SIZE];
    static const uint16_t CNTEXT1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar cnText1Buffer[CNTEXT1_SIZE];
    static const uint16_t CNTEXT2_SIZE = 2;
    touchgfx::Unicode::UnicodeChar cnText2Buffer[CNTEXT2_SIZE];
    static const uint16_t CNTEXT3_SIZE = 2;
    touchgfx::Unicode::UnicodeChar cnText3Buffer[CNTEXT3_SIZE];
    static const uint16_t CNTEXT4_SIZE = 2;
    touchgfx::Unicode::UnicodeChar cnText4Buffer[CNTEXT4_SIZE];
    static const uint16_t CNTEXT5_SIZE = 2;
    touchgfx::Unicode::UnicodeChar cnText5Buffer[CNTEXT5_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<KeyboardBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // KEYBOARDBASE_HPP
